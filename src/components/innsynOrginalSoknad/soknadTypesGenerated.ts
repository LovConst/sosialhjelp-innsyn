/* tslint:disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

/**
 * Versjonsnummeret følger reglene definert i "https://semver.org/" med følgende unntak/presiseringer:
 * 1. Ny majorversjon betyr en ny søknadsfil.
 * 2. Ny minorversjon betyr at feltet "kompatibilitet" kan ha blitt brukt.
 * 3. Ny patchversjon brukes ved endringer som skjer bakoverkompatibelt uten bruk av "kompatibilitet"-feltet.
 */
export type Soknadsdataversjonen = string;
export type AlltidSystemOgAldriUtdatert = "system";
export type EtFodselsnummerEllerEtDNummer = string;
export type SokersNavn = NavnPaEnPerson;
/**
 * "bruker" når data kommer fra en bruker, "system" når data kommer fra et register og "utdatert" hvis data ikke lenger er relevant (og da ikke lenger kan vises saksbehandler).
 */
export type KildenForDataene = "bruker" | "system" | "utdatert";
/**
 * Telefonnummeret vil i utgangspunktet kun være åttesifrede norske telefonnumre, men det er et krav å støtte standarden E.164. Dette for å muliggjøre fremtidig endring av hvilke telefonnummere som er tillatt uten å måtte gjøre tekniske endringer.
 */
export type TelefonnummerSomFolgerE164 = string;
/**
 * Hvis "harIkkeKonto" mangler betyr dette at bruker hverken har angitt kontonummer eller huket av for at han/hun mangler konto.
 */
export type BrukerHarEksplisittSagtAtHanHunIkkeHarNoenKontoSomKanBenyttes = boolean;
export type AngirEnAdresse =
  | AngirEnGateadresse
  | AngirEnMatrikkeladresse
  | AngirEnPostboksadresse
  | AngirUstrukturertAdresseListeMedTekststrenger;
export type AngirEnGateadresse = {
  type?: "gateadresse";
  [k: string]: any;
};
export type AngirEnMatrikkeladresse = {
  type?: "matrikkeladresse";
  [k: string]: any;
};
export type AngirEnPostboksadresse = {
  type?: "postboks";
  [k: string]: any;
};
export type AngirUstrukturertAdresseListeMedTekststrenger = {
  type?: "ustrukturert";
  [k: string]: any;
};
/**
 * Navnet kan være blankt.
 */
export type NavnPaArbeidsgiverKanVaereNavnPaPrivatpersonVedForenkletOppgjorsordning = string;
export type EnDatoMedFormatetYYYYMMDD = string;
/**
 * Hvis "forhold" mangler betyr dette at man ikke har fått data fra AA-registeret. Feltet "situasjon" vil da istedenfor benyttes.
 */
export type ListeOverArbeidsforholdDeSiste3Manedene = {
  kilde: KildenForDataene;
  arbeidsgivernavn: NavnPaArbeidsgiverKanVaereNavnPaPrivatpersonVedForenkletOppgjorsordning;
  fom: EnDatoMedFormatetYYYYMMDD;
  tom?: EnDatoMedFormatetYYYYMMDD;
  stillingsprosent: number;
  /**
   * Feltet er utdatert.
   */
  stillingstype?: "variabel" | "fast" | "fastOgVariabel";
  /**
   * Brukes når en søker overstyrer/endrer på et arbeidsforhold. Settes kun til "true" på arbeidsforhold med systemkilde. Anbefaler at man likevel viser dataene fra AA-registeret til saksbehandler men markert som overskrevet av bruker (for eksempel å vise med overstrykning).
   */
  overstyrtAvBruker: boolean;
  [k: string]: any;
}[];
export type AlltidBrukerEllerUtdatert = "bruker" | "utdatert";
/**
 * Sivilstatus til søker. Med "gift" menes både gift og registrert partner.
 */
export type SivilstatusTilSoker = "gift" | "ugift" | "samboer" | "enke" | "skilt" | "separert";
export type AlltidSystemEllerUtdatert = "system" | "utdatert";
/**
 * Det jobbes med å se på om søknaden kan presenteres på en annen måte slik at disse bekreftelsene ikke lenger er nødvendige, men det er ingen konkret plan for når dette eventuelt skjer.
 */
export type BekreftelserFraBruker = {
  kilde: KildenForDataene;
  /**
   * Kodeverdi som angir hva slags type bekreftelse det er. Dette feltet kan for eksempel brukes til å filtrere bort bekreftelser man ikke ønsker å vise til saksbehandler. Det er et MÅ-krav for konsumenter å dynamisk støtte nye typer. Eksempler: "bostotte", "verdi", "sparing", "utbetaling", "boutgifter" og "barneutgifter".
   */
  type: string;
  /**
   * En tittel som MÅ brukes hvis bekreftelsen skal presenteres til saksbehandler.
   */
  tittel: string;
  /**
   * Kan være manglende hvis bruker ikke har besvart spørsmålet.
   */
  verdi?: boolean;
  [k: string]: any;
}[];
/**
 * Ytelsen som gir utbetalingen gjelder fra og med denne datoen.
 */
export type EnDatoMedFormatetYYYYMMDD1 = string;
/**
 * Ytelsen som gir utbetalingen gjelder til og med denne datoen.
 */
export type EnDatoMedFormatetYYYYMMDD2 = string;
export type ManedligeUtgifter = {
  kilde: KildenForDataene;
  /**
   * Kodeverdi som angir hva slags type utgift det er. Dette feltet kan for eksempel brukes til å filtrere bort utgifter man ikke ønsker å vise til saksbehandler. Det er et MÅ-krav for konsumenter å dynamisk støtte nye typer. Eksempler: "strom", "kommunalAvgift", "oppvarming", "annenBoutgift", "barnFritidsaktiviteter", "barnTannregulering", "annenBarneutgift" og "annen".
   */
  type: string;
  /**
   * En tittel som MÅ brukes hvis utgiften skal presenteres til saksbehandler. Brukerangitt tekst kan være inkludert i tittelen.
   */
  tittel: string;
  belop?: number;
  /**
   * Brukes når en søker overstyrer/endrer. Settes kun til "true" på utgift med systemkilde. Anbefaler at man likevel viser dataene til saksbehandler men markert som overskrevet av bruker (for eksempel å vise med overstrykning).
   */
  overstyrtAvBruker: boolean;
  [k: string]: any;
}[];
/**
 * Dato som denne saken er registrert på.
 */
export type EnDatoMedFormatetYYYYMMDD3 = string;
export type ManedligeInntekter = {
  kilde: KildenForDataene;
  /**
   * Kodeverdi som angir hva slags type inntekt det er. Dette feltet kan for eksempel brukes til å filtrere bort inntekter man ikke ønsker å vise til saksbehandler. Det er et MÅ-krav for konsumenter å dynamisk støtte nye typer. Eksempler: "jobb", "studielanOgStipend", "barnebidrag" og "bostotte".
   */
  type: string;
  /**
   * En tittel som MÅ brukes hvis inntekten skal presenteres til saksbehandler. Brukerangitt tekst kan være inkludert i tittelen.
   */
  tittel: string;
  /**
   * Kan mangle hvis bruker har sagt at han/hun har en gitt type inntekt, men beløp mangler.
   */
  brutto?: number;
  /**
   * Kan mangle hvis bruker har sagt at han/hun har en gitt type inntekt, men beløp mangler.
   */
  netto?: number;
  /**
   * Brukes når en søker overstyrer/endrer. Settes kun til "true" på inntekt med systemkilde. Anbefaler at man likevel viser dataene til saksbehandler men markert som overskrevet av bruker (for eksempel å vise med overstrykning).
   */
  overstyrtAvBruker: boolean;
  [k: string]: any;
}[];
export type ManedligeUtgifter1 = {
  kilde: KildenForDataene;
  /**
   * Kodeverdi som angir hva slags type utgift det er. Dette feltet kan for eksempel brukes til å filtrere bort utgifter man ikke ønsker å vise til saksbehandler. Det er et MÅ-krav for konsumenter å dynamisk støtte nye typer. Eksempler: "barnebidrag", "husleie", "boliglanAvdrag", "boliglanRenter", "barnehage" og "sfo".
   */
  type: string;
  /**
   * En tittel som MÅ brukes hvis utgiften skal presenteres til saksbehandler. Brukerangitt tekst kan være inkludert i tittelen.
   */
  tittel: string;
  /**
   * Kan mangle hvis bruker har sagt at han/hun har en gitt type utgift, men beløp mangler.
   */
  belop?: number;
  /**
   * Brukes når en søker overstyrer/endrer. Settes kun til "true" på utgift med systemkilde. Anbefaler at man likevel viser dataene til saksbehandler men markert som overskrevet av bruker (for eksempel å vise med overstrykning).
   */
  overstyrtAvBruker: boolean;
  [k: string]: any;
}[];
export type Formue = {
  kilde: KildenForDataene;
  /**
   * Kodeverdi som angir hva slags type formue det er. Dette feltet kan for eksempel brukes til å filtrere bort formue man ikke ønsker å vise til saksbehandler. Det er et MÅ-krav for konsumenter å dynamisk støtte nye typer. Eksempler: "brukskonto", "bsu", "sparekonto", "livsforsikringssparedel", "verdipapirer" og "belop".
   */
  type: string;
  /**
   * En tittel som MÅ brukes hvis formuen skal presenteres til saksbehandler. Brukerangitt tekst kan være inkludert i tittelen.
   */
  tittel: string;
  /**
   * Kan mangle hvis bruker har sagt at han/hun har en gitt type formue, men beløp mangler.
   */
  belop?: number;
  /**
   * Brukes når en søker overstyrer/endrer. Settes kun til "true" på formue med systemkilde. Anbefaler at man likevel viser dataene til saksbehandler men markert som overskrevet av bruker (for eksempel å vise med overstrykning).
   */
  overstyrtAvBruker: boolean;
  [k: string]: any;
}[];
/**
 * Kombinert dato og tid etter ISO8601 med UTC som tidssone og millisekundpresisjon, for eksempel "2018-10-04T13:37:00.134Z"
 */
export type EtTidspunkt = string;
export type MinimumsversjonForAViseKompatibilitetstekstenInclusive = string;
export type MaksimumsversjonForAViseKompatibilitetstekstenInclusive = string;
/**
 * Formatet som brukes er [CommonMark](https://spec.commonmark.org/0.28/) men med utvidelse for å støtte tabeller slik det er definert i [GitHub Flavored Markdown](https://github.github.com/gfm/). Et eksempel på en implementasjon som fungerer er [markdown-it](https://github.com/markdown-it/markdown-it). Se [eksempelfil](https://raw.githubusercontent.com/navikt/soknadsosialhjelp-filformat/master/src/test/resources/markdown/format.md) og [test kompatibilitet](https://babelmark.github.io/?text=Stor+overskrift%0A%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%0A%0AUnderoverskrift%0A---------------%0A%0AVanlig+tekst+med+**fet+skrift**+og+_kursiv_%2C+_samt+**kombinasjonen**+av+begge_.%0A%0A%3E+Sitattekst%0A%3E+uten+linjeskift.%0A%0A%23%23%23+Liten+overskrift%0A1.+Nummerert+liste%0A+++*+Underpunkt%0A+++*+Underpunkt%0A%0A+++++Tekst+som+er+rykket+inn+p%C3%A5+samme+niv%C3%A5+som+underpunktet+over.%0A%0A2.+Nummerert+liste%0A+++1.+Underliste%0A+++2.+Underliste%0A%0A%23%23%23%23+Enda+mindre+overskrift%0A*+Punkt%0A*+Punkt%0A++*+Underpunkt%0A*+Punkt%0A%0A%23+Alternativ+stor+overskrift%0A%23%23+Alternativ+underoverskrift%0A%0A%7C+Midtstilte+tall++%7CVenstrestilt++++++%7CH%C3%B8yrestilt+%7C%0A%7C+%3A--------------%3A+%7C%3A-----------------%7C----------%3A%7C%0A%7C+++++++42+++++++++%7CMeningen+med+livet%7C1++++++++++%7C%0A%7C+++++++47+++++++++%7CStar+Trek+TM++++++%7C2++++++++++%7C%0A%7C+++++++21+++++++++%7CMed+**fet+skrift**%7C+++++++++++%7C) på Markdownimplementasjoner.
 */
export type MarkdownFormatertTekststrengSomKanVisesSaksbehandler = string;
/**
 * Det er et MÅ-krav å vise saksbehandler alle kompatibilitetstekster for versjonen man parser soknads-JSON-en med. Det anbefales å ha et avsnitt (eller tilsvarende) mellom hver enkelt kompatibilitetstekst.
 */
export type ListeMedKompatibilitetstekster = InneholderEnMarkdownFormatertKompatibilitetstekst[];

/**
 * Encoding er UTF-8.
 */
export interface JSONFormatertSoknadOmSosialhjelpOsv {
  version: Soknadsdataversjonen;
  data: InneholderSoknadsdataeneUtenMetaOgKompatibilitetsdata;
  innsendingstidspunkt?: EtTidspunkt;
  mottaker: Soknadsmottaker;
  driftsinformasjon: InneholderInformasjonOmStatusForHentingAvOpplysningerFraAndreTjenester;
  kompatibilitet: ListeMedKompatibilitetstekster;
  [k: string]: any;
}
export interface InneholderSoknadsdataeneUtenMetaOgKompatibilitetsdata {
  personalia: Personalia;
  arbeid: Arbeid;
  utdanning: Utdanning;
  familie: Familie;
  begrunnelse: Begrunnelse;
  bosituasjon: Bosituasjon;
  okonomi: OkonomiskeData;
  [k: string]: any;
}
export interface Personalia {
  personIdentifikator: UnikIdentifikasjonAvSoker;
  navn: SokersNavn;
  statsborgerskap?: SokersStatsborgerskap;
  nordiskBorger?: AngirOmSokerErStatsborgerIEtNordiskLand;
  telefonnummer?: SokersTelefonnummer;
  kontonummer: SokersKontonummer;
  folkeregistrertAdresse?: AngirEnAdresse;
  oppholdsadresse?: AngirEnAdresse;
  postadresse?: AngirEnAdresse;
  [k: string]: any;
}
export interface UnikIdentifikasjonAvSoker {
  kilde: AlltidSystemOgAldriUtdatert;
  verdi: EtFodselsnummerEllerEtDNummer;
  [k: string]: any;
}
export interface NavnPaEnPerson {
  /**
   * Feltet kan være blankt.
   */
  fornavn: string;
  /**
   * Feltet kan være blankt.
   */
  mellomnavn: string;
  /**
   * Feltet kan være blankt.
   */
  etternavn: string;
  [k: string]: any;
}
export interface SokersStatsborgerskap {
  kilde: KildenForDataene;
  /**
   * Definert med ISO 3166-1 (alpha-3).
   */
  verdi: string;
  [k: string]: any;
}
/**
 * Hvis "nordiskBorger" mangler i en søknad betyr dette at søker ikke har svart på spørsmålet.
 */
export interface AngirOmSokerErStatsborgerIEtNordiskLand {
  kilde: KildenForDataene;
  verdi: boolean;
  [k: string]: any;
}
/**
 * Hvis "telefonnummer" mangler i en søknad betyr dette at søker ikke har angitt noe telefonnummer.
 */
export interface SokersTelefonnummer {
  kilde: KildenForDataene;
  verdi: TelefonnummerSomFolgerE164;
  [k: string]: any;
}
export interface SokersKontonummer {
  kilde: KildenForDataene;
  harIkkeKonto?: BrukerHarEksplisittSagtAtHanHunIkkeHarNoenKontoSomKanBenyttes;
  /**
   * Hvis "verdi" mangler betyr dette at bruker ikke har lagt inn noe kontonummer. Hvis angitt er "verdi" et norsk kontnummer, dvs 11-sifret og modulus-11-gyldig. Hvis norsk definisjon av kontonummer endres vil dette formatet også bli endret. Eventuelle konsumenter bør ta høyde for dette.
   */
  verdi?: string;
  [k: string]: any;
}
export interface Arbeid {
  forhold?: ListeOverArbeidsforholdDeSiste3Manedene;
  situasjon?: EnOppsummeringAvArbeidssituasjonen;
  kommentarTilArbeidsforhold?: Kommentar;
  [k: string]: any;
}
/**
 * Hvis situasjon mangler vil "forhold" være satt (og mottsatt).
 */
export interface EnOppsummeringAvArbeidssituasjonen {
  kilde: AlltidBrukerEllerUtdatert;
  /**
   * Hvis "erIJobb" mangler betyr dette at bruker ikke har besvart spørsmålet i skjemaet.
   */
  erIJobb?: boolean;
  /**
   * Hvis "jobbGrad" mangler betyr dette at bruker ikke har besvart spørsmålet i skjemaet.
   */
  jobbGrad?: "heltid" | "deltid";
  [k: string]: any;
}
export interface Kommentar {
  kilde?: AlltidBrukerEllerUtdatert;
  verdi?: string;
  [k: string]: any;
}
export interface Utdanning {
  kilde: KildenForDataene;
  /**
   * Hvis "erStudent" mangler betyr dette at søker ikke har svart på spørsmålet.
   */
  erStudent?: boolean;
  /**
   * Hvis "studentgrad" mangler betyr dette at søker ikke har svart på spørsmålet.
   */
  studentgrad?: "heltid" | "deltid";
  [k: string]: any;
}
export interface Familie {
  sivilstatus?: SivilstatusOgInformasjonOmEventuellEktefelle;
  folkeregistrertMedEktefelleAvviksforklaring?: Forklaring;
  forsorgerplikt: Forsorgerplikt;
  [k: string]: any;
}
/**
 * Hvis "sivilstatus" mangler betyr dette at søker ikke har svart på spørsmålet.
 */
export interface SivilstatusOgInformasjonOmEventuellEktefelle {
  kilde: KildenForDataene;
  status: SivilstatusTilSoker;
  ektefelle?: SokersEktefelle;
  /**
   * Settes til true hvis ektefelle/registrert partner har diskresjonskode 6 eller 7. Kun relevant hvis "kilde" er "system".
   */
  ektefelleHarDiskresjonskode?: boolean;
  /**
   * Kun relevant hvis "kilde" er "system".
   */
  folkeregistrertMedEktefelle?: boolean;
  /**
   * Kun relevant hvis "kilde" er "bruker".
   */
  borSammenMed?: boolean;
  /**
   * Brukerskrevet tekstlig forklaring (inkl. linjeskift). Kun relevant "kilde" er "bruker".
   */
  borIkkeSammenMedBegrunnelse?: string;
  [k: string]: any;
}
export interface SokersEktefelle {
  navn: NavnPaEnPerson;
  fodselsdato?: EnDatoMedFormatetYYYYMMDD;
  personIdentifikator?: EtFodselsnummerEllerEtDNummer;
  [k: string]: any;
}
/**
 * Feltet er utdatert.
 */
export interface Forklaring {
  kilde: AlltidBrukerEllerUtdatert;
  /**
   * Brukerskrevet tekstlig forklaring (inkl. linjeskift).
   */
  verdi?: string;
  [k: string]: any;
}
export interface Forsorgerplikt {
  harForsorgerplikt?: {
    kilde?: KildenForDataene;
    verdi?: boolean;
    [k: string]: any;
  };
  barnebidrag?: {
    kilde?: AlltidBrukerEllerUtdatert;
    verdi?: "betaler" | "mottar" | "begge" | "ingen";
    [k: string]: any;
  };
  ansvar?: {
    barn?: {
      kilde: KildenForDataene;
      navn: NavnPaEnPerson;
      fodselsdato?: EnDatoMedFormatetYYYYMMDD;
      personIdentifikator?: EtFodselsnummerEllerEtDNummer;
      /**
       * Settes til true hvis barn har diskresjonskode 6 eller 7. Kun relevant hvis "kilde" er "system". Feltet er utdatert.
       */
      harDiskresjonskode?: boolean;
      [k: string]: any;
    };
    borSammenMed?: {
      kilde: AlltidBrukerEllerUtdatert;
      verdi: boolean;
      [k: string]: any;
    };
    erFolkeregistrertSammen?: {
      kilde: AlltidSystemEllerUtdatert;
      verdi: boolean;
      [k: string]: any;
    };
    /**
     * Om barn som er folkeregistrert sammen med søker har delt bosted. Kun relevant hvis "erFolkeregistrertSammen" er "true".
     */
    harDeltBosted?: {
      kilde: AlltidBrukerEllerUtdatert;
      verdi: boolean;
      [k: string]: any;
    };
    samvarsgrad?: {
      kilde: AlltidBrukerEllerUtdatert;
      /**
       * Samværsgraden angitt i prosent.
       */
      verdi: number;
      [k: string]: any;
    };
    [k: string]: any;
  }[];
  [k: string]: any;
}
export interface Begrunnelse {
  kilde: AlltidBrukerEllerUtdatert;
  /**
   * Brukerskrevet tekstlig forklaring (inkl. linjeskift).
   */
  hvorforSoke: string;
  /**
   * Brukerskrevet tekstlig forklaring (inkl. linjeskift).
   */
  hvaSokesOm: string;
  [k: string]: any;
}
export interface Bosituasjon {
  kilde: AlltidBrukerEllerUtdatert;
  botype?:
    | "eier"
    | "leier"
    | "kommunal"
    | "ingen"
    | "institusjon"
    | "krisesenter"
    | "fengsel"
    | "venner"
    | "foreldre"
    | "familie"
    | "annet";
  antallPersoner?: number;
  [k: string]: any;
}
export interface OkonomiskeData {
  opplysninger: OkonomiskeOpplysningerSomIkkeInngarIDenStrukturerteOversikten;
  oversikt: StrukturertOkonomiskOversikt;
  [k: string]: any;
}
/**
 * Flott hvis saksbehandlers behov/ønsker kan diskuteres på Slack slik at en mer strukturert måte å presentere dataene på kan utarbeides.
 */
export interface OkonomiskeOpplysningerSomIkkeInngarIDenStrukturerteOversikten {
  bekreftelse?: BekreftelserFraBruker;
  beskrivelseAvAnnet?: BeskrivelsesfelterForInntekterUtgifterOgVerdier;
  utbetaling: UtbetalingerSokerHarMottatt[];
  utgift: ManedligeUtgifter;
  bostotte?: BostotteInformasjonOmBruker;
  [k: string]: any;
}
/**
 * Disse feltene er overflødige og vil bli tatt bort.
 */
export interface BeskrivelsesfelterForInntekterUtgifterOgVerdier {
  kilde: AlltidBrukerEllerUtdatert;
  /**
   * Brukerskrevet tekstlig forklaring (inkl. linjeskift) av annet brukeren har av økonomisk verdi.
   */
  verdi: string;
  /**
   * Brukerskrevet tekstlig forklaring (inkl. linjeskift) av annet brukeren har av innskudd eller sparing.
   */
  sparing: string;
  /**
   * Brukerskrevet tekstlig forklaring (inkl. linjeskift) av annet brukeren har av utbetalinger.
   */
  utbetaling: string;
  /**
   * Brukerskrevet tekstlig forklaring (inkl. linjeskift) av annet brukeren har av boutgifter. Feltet er utdatert.
   */
  boutgifter: string;
  /**
   * Brukerskrevet tekstlig forklaring (inkl. linjeskift) av andre utgifter til barn som brukeren har. Feltet er utdatert.
   */
  barneutgifter: string;
  [k: string]: any;
}
export interface UtbetalingerSokerHarMottatt {
  kilde: KildenForDataene;
  /**
   * Kodeverdi som angir hva slags type utbetaling det er. Dette feltet kan for eksempel brukes til å filtrere bort utbetalinger man ikke ønsker å vise til saksbehandler. Det er et MÅ-krav for konsumenter å dynamisk støtte nye typer. Eksempler: "utbytte", "salg", "forsikring" og "annen".
   */
  type: string;
  /**
   * En tittel som MÅ brukes hvis utbetalingen skal presenteres til saksbehandler. Brukerangitt tekst kan være inkludert i tittelen.
   */
  tittel: string;
  organisasjon?: Organisasjon;
  belop?: number;
  /**
   * Nettobeløp for utbetalingen.
   */
  netto?: number;
  /**
   * Bruttobeløp for utbetalingen.
   */
  brutto?: number;
  /**
   * Totalsum for skattetrekk som gjøres for utbetalingen.
   */
  skattetrekk?: number;
  /**
   * Totalsum for andre trekk som gjøres for utbetalingen.
   */
  andreTrekk?: number;
  utbetalingsdato?: EnDatoMedFormatetYYYYMMDD;
  periodeFom?: EnDatoMedFormatetYYYYMMDD1;
  periodeTom?: EnDatoMedFormatetYYYYMMDD2;
  /**
   * Liste over delutbetalinger hvis utbetalingen består av flere deler.
   */
  komponenter?: {
    /**
     * Beskrivelse av hva slags type delutbetaling det er. Eksempler: "Arbeidstaker", "Grunnpensjon" og "Tilleggspensjon".
     */
    type?: string;
    /**
     * Beløp for delutbetalingen. Resultat av satsType, satsAntall og satsBelop
     */
    belop?: number;
    /**
     * Beskrivelse av hva slags type sats det er. Eksempel: "Dag" og "Prosent".
     */
    satsType?: string;
    /**
     * Antall enheter av satstypen for delutbetalingen.
     */
    satsAntall?: number;
    /**
     * Satsbeløpet for delutbetalingen
     */
    satsBelop?: number;
    [k: string]: any;
  }[];
  /**
   * Brukes når en søker overstyrer/endrer. Settes kun til "true" på utbetaling med systemkilde. Anbefaler at man likevel viser dataene til saksbehandler men markert som overskrevet av bruker (for eksempel å vise med overstrykning).
   */
  overstyrtAvBruker: boolean;
  /**
   * Hvem som har mottatt utbetalingen. Eksempler: "Husstand", "Kommune".
   */
  mottaker?: "Husstand" | "Kommune";
  [k: string]: any;
}
export interface Organisasjon {
  /**
   * Navn på organisasjonen.
   */
  navn: string;
  /**
   * Organisasjonsnummer.
   */
  organisasjonsnummer: string;
  [k: string]: any;
}
export interface BostotteInformasjonOmBruker {
  saker?: SakerSomBrukerHar[];
  [k: string]: any;
}
export interface SakerSomBrukerHar {
  kilde: AlltidSystemEllerUtdatert;
  /**
   * Kodeverdi som angir hva slags type sak det er. Dette feltet kan for eksempel brukes til å filtrere bort saker man ikke ønsker å vise til saksbehandler. Det er et MÅ-krav for konsumenter å dynamisk støtte nye typer. Eksempler: "husbanken" og "annet".
   */
  type: string;
  dato: EnDatoMedFormatetYYYYMMDD3;
  /**
   * Saksstatus. Eksempler: "UNDER_BEHANDLING", "VEDTATT"
   */
  status: string;
  /**
   * En tilleggsbeskrivelse til status. Kan være tom.
   */
  beskrivelse?: string;
  /**
   * Vedtaksstatus. Eksempler: "INNVILGET", "AVSLAG", "AVVIST".
   */
  vedtaksstatus?: "INNVILGET" | "AVSLAG" | "AVVIST";
  [k: string]: any;
}
export interface StrukturertOkonomiskOversikt {
  inntekt: ManedligeInntekter;
  utgift: ManedligeUtgifter1;
  formue: Formue;
  [k: string]: any;
}
export interface Soknadsmottaker {
  /**
   * Kommunenummer for søknadsmottaker.
   */
  kommunenummer?: string;
  /**
   * Enhetssnummer for søknadsmottaker.
   */
  enhetsnummer?: string;
  /**
   * Navn på NAV-enhet som søknaden sendes til.
   */
  navEnhetsnavn?: string;
  [k: string]: any;
}
export interface InneholderInformasjonOmStatusForHentingAvOpplysningerFraAndreTjenester {
  /**
   * Hvis utbetalinger fra NAV ikke kunne hentes er denne true.
   */
  utbetalingerFraNavFeilet: boolean;
  /**
   * Hvis skattbar inntekt hos skatteetaten ikke kunne hentes er denne true.
   */
  inntektFraSkatteetatenFeilet: boolean;
  /**
   * Hvis økonomisk støtte fra Husbanken ikke kunne hentes er denne true.
   */
  stotteFraHusbankenFeilet: boolean;
  [k: string]: any;
}
/**
 * Kompatibilitetsteksten skal vises saksbehandler gitt at versjonen man forventer ved parsing av JSON er innenfor intervallet bestemt av "minVersion" og "maxVersion".
 */
export interface InneholderEnMarkdownFormatertKompatibilitetstekst {
  minVersion?: MinimumsversjonForAViseKompatibilitetstekstenInclusive;
  maxVersion?: MaksimumsversjonForAViseKompatibilitetstekstenInclusive;
  text?: MarkdownFormatertTekststrengSomKanVisesSaksbehandler;
  [k: string]: any;
}
